apiVersion: apps/v1
kind: Deployment
metadata:
  name: poi
  namespace: api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: poi
  template:
    metadata:
      labels:
        app: poi
    spec:
      nodeSelector:
        "kubernetes.io/os": linux
      containers:
      - name: poi
        image: registrymjo6478.azurecr.io/tripinsights/poi:latest  
        ports:
        - containerPort: 80
        env:
        - name: SQL_SERVER
          value: "sqlservermjo6478.database.windows.net"
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 250m
            memory: 256Mi
        volumeMounts:
        - name: secrets-store01-inline
          mountPath: "/secrets"
          readOnly: true
      volumes:
        - name: secrets-store01-inline
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: "azure-kvname-user-msi"  
  
---
apiVersion: v1
kind: Service
metadata:
  name: poi
  namespace: api
spec:
  ports:
  - port: 8080
    targetPort: 80
  selector:
    app: poi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: trips
  namespace: api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: trips
  template:
    metadata:
      labels:
        app: trips
    spec:
      nodeSelector:
        "kubernetes.io/os": linux
      containers:
      - name: trips
        image: registrymjo6478.azurecr.io/tripinsights/trips:latest
        ports:
        - containerPort: 80
        env:
        - name: SQL_SERVER
          value: "sqlservermjo6478.database.windows.net"
        - name: DOCS_URI
          value: "http://temp"
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 250m
            memory: 256Mi
        volumeMounts:
        - name: secrets-store01-inline
          mountPath: "/secrets"
          readOnly: true
      volumes:
        - name: secrets-store01-inline
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: "azure-kvname-user-msi"
---
apiVersion: v1
kind: Service
metadata:
  name: trips
  namespace: api
spec:
  ports:
  - port: 8081
    targetPort: 80
  selector:
    app: trips
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-java
  namespace: api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: user-java
  template:
    metadata:
      labels:
        app: user-java
    spec:
      nodeSelector:
        "kubernetes.io/os": linux
      containers:
      - name: user-java
        image: registrymjo6478.azurecr.io/tripinsights/user-java:latest
        ports:
        - containerPort: 80
        env:
        - name: SQL_SERVER
          value: "sqlservermjo6478.database.windows.net"
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 250m
            memory: 256Mi
        volumeMounts:
        - name: secrets-store01-inline
          mountPath: "/secrets"
          readOnly: true
      volumes:
        - name: secrets-store01-inline
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: "azure-kvname-user-msi"
---
apiVersion: v1
kind: Service
metadata:
  name: user-java
  namespace: api
spec:
  ports:
  - port: 8082
    targetPort: 80
  selector:
    app: user-java
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: userprofile
  namespace: api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: userprofile
  template:
    metadata:
      labels:
        app: userprofile
    spec:
      nodeSelector:
        "kubernetes.io/os": linux
      containers:
      - name: userprofile
        image: registrymjo6478.azurecr.io/tripinsights/userprofile:latest
        ports:
        - containerPort: 80
        env:
        - name: SQL_SERVER
          value: "sqlservermjo6478.database.windows.net"
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 250m
            memory: 256Mi
        volumeMounts:
        - name: secrets-store01-inline
          mountPath: "/secrets"
          readOnly: true
      volumes:
        - name: secrets-store01-inline
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: "azure-kvname-user-msi"
---
apiVersion: v1
kind: Service
metadata:
  name: userprofile
  namespace: api
spec:
  ports:
  - port: 8083
    targetPort: 80
  selector:
    app: userprofile
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tripviewer
  namespace: web
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tripviewer
  template:
    metadata:
      labels:
        app: tripviewer
    spec:
      nodeSelector:
        "kubernetes.io/os": linux
      containers:
      - name: tripviewer
        image: registrymjo6478.azurecr.io/tripinsights/tripviewer:latest 
        ports:
        - containerPort: 80       
        env:
        - name: USERPROFILE_API_ENDPOINT
          value: "http://userprofile.api.svc.cluster.local:8083"
        - name: TRIPS_API_ENDPOINT
          value: "http://trips.api.svc.cluster.local:8081"
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 250m
            memory: 256Mi
---
apiVersion: v1
kind: Service
metadata:
  name: tripviewer
  namespace: web
spec:
  type: ClusterIP
  ports:
  - port: 80
  selector:
    app: tripviewer
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: tripviewer
  namespace: web
  annotations:
    kubernetes.io/ingress.class: addon-http-application-routing
spec:
  defaultBackend:
    service:
      name: tripviewer
      port:
        number: 80
  rules:
  - host: tripviewer.1f0c34bc52b146e3a617.westcentralus.aksapp.io
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service: 
            name: tripviewer
            port: 
              number: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: tripviewer
  namespace: api
  annotations:
    kubernetes.io/ingress.class: addon-http-application-routing
spec:
  rules:
  - host: tripviewer.1f0c34bc52b146e3a617.westcentralus.aksapp.io
    http:
      paths:
      - path: /api/poi
        pathType: Prefix
        backend:          
          service: 
            name: poi
            port: 
              number: 8080
      - path: /api/trips
        pathType: Prefix
        backend:          
          service: 
            name: trips
            port: 
              number: 8081
      - path: /api/user-java
        pathType: Prefix
        backend:          
          service: 
            name: user-java
            port: 
              number: 8082
      - path: /api/user
        pathType: Prefix
        backend:          
          service: 
            name: userprofile
            port: 
              number: 8083
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: akswebedit
  namespace: web
subjects:
- kind: Group
  name: cae54da3-b524-48c5-8888-52619d0c3edc
  apiGroup: rbac.authorization.k8s.io
roleRef:
  kind: ClusterRole
  name: edit
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: akswebview
  namespace: web
subjects:
- kind: Group
  name: cae54da3-b524-48c5-8888-52619d0c3edc
  apiGroup: rbac.authorization.k8s.io
roleRef:
  kind: ClusterRole
  name: view
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: apiview
  namespace: api
subjects:
- kind: Group
  name: 771273c6-5662-487e-9da3-37322a171f76
  apiGroup: rbac.authorization.k8s.io
roleRef:
  kind: ClusterRole
  name: view
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: apiedit
  namespace: api
subjects:
- kind: Group
  name: 771273c6-5662-487e-9da3-37322a171f76
  apiGroup: rbac.authorization.k8s.io
roleRef:
  kind: ClusterRole
  name: edit
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: secrets-store.csi.x-k8s.io/v1
kind: SecretProviderClass
metadata:
  name: azure-kvname-user-msi
  namespace: api
spec:
  provider: azure
  parameters:
    useVMManagedIdentity: "true"
    userAssignedIdentityID: 796a2110-a55b-420f-bcc4-becc2f131a17
    keyvaultName: team2KeyvaultOct20
    cloudName: ""                         # [OPTIONAL for Azure] if not provided, the Azure environment defaults to AzurePublicCloud
    objects:  |
      array:
        - |
          objectName: databaseUsername
          objectAlias: SQL_USER
          objectType: secret
          objectVersion: ""
        - |
          objectName: databasePassword
          objectAlias: SQL_PASSWORD
          objectType: secret
          objectVersion: ""
    tenantId: c5f03bb5-9e7c-4bfa-9c2f-d3d743503d2c